#pragma once

#include "../dxgi/dxgi_include.h"

#include <d3d10_1.h>

#ifndef D3D10_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL
#define D3D10_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL 0xFFFFFFFF
#endif

#ifndef D3D10_KEEP_UNORDERED_ACCESS_VIEWS
#define D3D10_KEEP_UNORDERED_ACCESS_VIEWS 0xFFFFFFFF
#endif

#define D3D10_DXVK_USE_REMAINING_LAYERS 0xFFFFFFFF
#define D3D10_DXVK_USE_REMAINING_LEVELS 0xFFFFFFFF

#ifndef _MSVC_VER
inline UINT D3D10CalcSubresource( UINT MipSlice, UINT ArraySlice, UINT MipLevels )
{ 
    return MipSlice + ArraySlice * MipLevels; 
}

typedef 
enum D3D10_FORMAT_SUPPORT
    {
        D3D10_FORMAT_SUPPORT_BUFFER	= 0x1,
        D3D10_FORMAT_SUPPORT_IA_VERTEX_BUFFER	= 0x2,
        D3D10_FORMAT_SUPPORT_IA_INDEX_BUFFER	= 0x4,
        D3D10_FORMAT_SUPPORT_SO_BUFFER	= 0x8,
        D3D10_FORMAT_SUPPORT_TEXTURE1D	= 0x10,
        D3D10_FORMAT_SUPPORT_TEXTURE2D	= 0x20,
        D3D10_FORMAT_SUPPORT_TEXTURE3D	= 0x40,
        D3D10_FORMAT_SUPPORT_TEXTURECUBE	= 0x80,
        D3D10_FORMAT_SUPPORT_SHADER_LOAD	= 0x100,
        D3D10_FORMAT_SUPPORT_SHADER_SAMPLE	= 0x200,
        D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON	= 0x400,
        D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT	= 0x800,
        D3D10_FORMAT_SUPPORT_MIP	= 0x1000,
        D3D10_FORMAT_SUPPORT_MIP_AUTOGEN	= 0x2000,
        D3D10_FORMAT_SUPPORT_RENDER_TARGET	= 0x4000,
        D3D10_FORMAT_SUPPORT_BLENDABLE	= 0x8000,
        D3D10_FORMAT_SUPPORT_DEPTH_STENCIL	= 0x10000,
        D3D10_FORMAT_SUPPORT_CPU_LOCKABLE	= 0x20000,
        D3D10_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE	= 0x40000,
        D3D10_FORMAT_SUPPORT_DISPLAY	= 0x80000,
        D3D10_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT	= 0x100000,
        D3D10_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET	= 0x200000,
        D3D10_FORMAT_SUPPORT_MULTISAMPLE_LOAD	= 0x400000,
        D3D10_FORMAT_SUPPORT_SHADER_GATHER	= 0x800000,
        D3D10_FORMAT_SUPPORT_BACK_BUFFER_CAST	= 0x1000000
    } 	D3D10_FORMAT_SUPPORT;
#endif
